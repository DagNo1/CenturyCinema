/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package tg.trident.centurycinema.ticket_seller.reservation_panels;

import Model.CenturyModel;
import Model.Movie;
import Model.Room;
import Model.Screening;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import tg.trident.centurycinema.ticket_seller.TicketSellerPage;

/**
 *
 * @author dagim
 */
public class SeatSelectionPage extends javax.swing.JPanel {
    ArrayList<String> selectedSeats = new ArrayList<>();
    ArrayList<String> unReservedSeatsList = new ArrayList<>();
    int screeningId; 

    /** Creates new form SeatSelectionPage */
    public SeatSelectionPage() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        filterPeriodButton1 = new tg.trident.centurycinema.buttons.GoldenButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        selectedSeatsText = new javax.swing.JLabel();
        addSeat = new tg.trident.centurycinema.buttons.GoldenButton();
        freeSeats = new javax.swing.JComboBox<>();
        clearSelected = new tg.trident.centurycinema.buttons.RedButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Old Password");

        filterPeriodButton1.setText("Reserve Seats");
        filterPeriodButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterPeriodButton1ActionPerformed(evt);
            }
        });

        setBackground(new java.awt.Color(37, 37, 37));
        setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 57, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Seat Arrangment");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Arraged seats here  ");

        selectedSeatsText.setForeground(new java.awt.Color(255, 255, 255));
        selectedSeatsText.setText("Selected Seats:");

        addSeat.setText("Add Seat");
        addSeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSeatActionPerformed(evt);
            }
        });

        freeSeats.setBackground(new java.awt.Color(58, 58, 58));
        freeSeats.setForeground(new java.awt.Color(120, 120, 120));
        freeSeats.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Free Seats" }));
        freeSeats.setBorder(null);
        freeSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freeSeatsActionPerformed(evt);
            }
        });

        clearSelected.setText("Clear Selected");
        clearSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSelectedActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(37, 37, 37));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(560, 560, 560))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(freeSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(clearSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(selectedSeatsText, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(clearSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(freeSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectedSeatsText, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void filterPeriodButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterPeriodButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterPeriodButton1ActionPerformed

    private void addSeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSeatActionPerformed
       if(freeSeats.getSelectedItem().toString().equals("No Free Seats")){
           return;
       }
       unReservedSeatsList.remove(freeSeats.getSelectedItem().toString());
       selectedSeats.add(freeSeats.getSelectedItem().toString());
       selectedSeatsText.setText(selectedSeatsText.getText() + " " + freeSeats.getSelectedItem().toString());
       populateFreeSeatsComboBox();
       populateTabel();
    }//GEN-LAST:event_addSeatActionPerformed

    private void freeSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freeSeatsActionPerformed
         
    }//GEN-LAST:event_freeSeatsActionPerformed

    private void clearSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSelectedActionPerformed
        setScreening(screeningId);
        selectedSeatsText.setText("Selected Seats: ");
        selectedSeats.clear();
    }//GEN-LAST:event_clearSelectedActionPerformed

    public void setScreening(int screeningId){
        this.screeningId = screeningId;
        unReservedSeatsList = CenturyModel.getAllUnreservedSeatsForScreenings(screeningId);
        populateFreeSeatsComboBox();
        populateTabel();
    }
    
    public void populateFreeSeatsComboBox(){
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        freeSeats.setModel(model);
        for (String item : unReservedSeatsList) {
             model.addElement(item);
        }
    }
    
    public void populateTabel(){
         // Set the table model
        DefaultTableModel tableModel = new DefaultTableModel();
        jTable1.setModel(tableModel);
        Room room = CenturyModel.getRoomById(CenturyModel.getRoomIdForScreening(screeningId));


        // Add columns to the table model
        for (int col = 1; col <= room.getNum_columns(); col++) {
            tableModel.addColumn(col);
        }

        // Add rows to the table model
        for (int row = 1; row <= room.getNum_rows(); row++) {
            Object[] rowData = new Object[room.getNum_columns()];
            for (int col = 1; col <= room.getNum_columns(); col++) {
                String seatName = getSeatName(row, col);
                rowData[col - 1] = seatName;
            }
            tableModel.addRow(rowData);
        }

       

    
    }
    
    public ArrayList<String> getSelectedSeats(){
        return selectedSeats;
    }
    
    public int getScreeningId(){
        return screeningId;
    }
    
    public void clearData(){
        selectedSeatsText.setText("Selected Seats: ");
        selectedSeats.clear();
        screeningId = -1;
        unReservedSeatsList.clear();
    }
   

    private static ArrayList<String> getUnreservedSeats(int roomId) {
        // Retrieve the list of unreserved seat names for the given room ID
        // Implement your logic here
        return new ArrayList<>();
    }

    private static String getSeatName(int row, int col) {
        char rowChar = (char) ('A' + row - 1);  // Convert row number to letter ('A' corresponds to 1)
        return rowChar + String.valueOf(col);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private tg.trident.centurycinema.buttons.GoldenButton addSeat;
    private tg.trident.centurycinema.buttons.RedButton clearSelected;
    private tg.trident.centurycinema.buttons.GoldenButton filterPeriodButton1;
    private javax.swing.JComboBox<String> freeSeats;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel selectedSeatsText;
    // End of variables declaration//GEN-END:variables

}
